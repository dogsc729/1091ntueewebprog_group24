[{"/home/sylin/Documents/1091ntueewebprog_group24/src/reportWebVitals.js":"1","/home/sylin/Documents/1091ntueewebprog_group24/src/index.js":"2","/home/sylin/Documents/1091ntueewebprog_group24/src/App.js":"3","/home/sylin/Documents/1091ntueewebprog_group24/src/axios.js":"4","/home/sylin/Documents/1091ntueewebprog_group24/src/display.js":"5"},{"size":362,"mtime":1610935813209,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1610935813209,"results":"8","hashOfConfig":"7"},{"size":6948,"mtime":1611176957905,"results":"9","hashOfConfig":"7"},{"size":674,"mtime":1610963611991,"results":"10","hashOfConfig":"7"},{"size":905,"mtime":1611125989733,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"2hfare",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/home/sylin/Documents/1091ntueewebprog_group24/src/reportWebVitals.js",[],["25","26"],"/home/sylin/Documents/1091ntueewebprog_group24/src/index.js",[],"/home/sylin/Documents/1091ntueewebprog_group24/src/App.js",["27","28","29","30","31","32","33","34","35"],"import './App.css';\nimport { useState } from 'react'\nimport { startPage, selectcityPage, selecttypePage, choosingPage } from './axios';\nimport background from \"./images/taiwan_map.png\";\nimport { Button, Input, message, Tag } from 'antd'\nimport Display from './display'\nimport taipei from \"./images/taipei.png\"\nimport new_taipei from \"./images/new taipei.png\"\nimport taoyuan from \"./images/taoyuan.png\"\nimport taichung from \"./images/taichung.png\"\nimport tainan from \"./images/tainan.png\"\nimport kaohsiung from \"./images/kaohsiung.png\"\nimport food from \"./images/food.png\"\nimport hotel from \"./images/hotel.png\"\nimport basket from \"./images/basket.jpeg\"\nimport tour from \"./images/tour.jpeg\"\nimport React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\nconst Key = \"AIzaSyBT92vSGssAdIl7g-JDd3joI_0n9z_QN1M\"\n// Map\n\nfunction App() {\n  const [mylat, setmylat] = useState(0)\n  const [mylng, setmylng] = useState(0)\n  const [myzoom, setmyzoom] = useState(10)\n  const lats = [0, 25.0466852, 25.046146, 25.005998, 24.1515062, 22.995732, 22.6508225]\n  const lngs = [0, 121.5419117, 121.5282649, 121.3105929, 120.6827387, 120.2347414, 120.3146344]\n  const zooms = [0, 13, 13, 12, 12.5, 13.5, 13.96]\n\n  class SimpleMap extends Component {\n    static defaultProps = {\n      center: {\n        lat: mylat,\n        lng: mylng\n      },\n      zoom: myzoom\n    };\n\n    render() {\n      return (\n        // Important! Always set the container height explicitly\n        <div style={{ height: '100vh', width: '1000%', position: \"relative\" }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: Key }}\n            defaultCenter={this.props.center}\n            defaultZoom={this.props.zoom}\n          >\n            <AnyReactComponent\n              lat={mylat}\n              lng={mylng}\n              text=\"My Marker\"\n            />\n          </GoogleMapReact>\n        </div>\n      );\n    }\n  }\n  //const [start, setstart] = useState(false)\n  //const [selectcity, setselectcity] = useState(false)//選擇城市與否\n  //const [selecttype, setselecttype] = useState(false)//選擇種類與否\n  const [typename, settype] = useState(\"default\")//種類為何？\n  const [cityname, setcity] = useState(\"default\")\n  const [page, setpage] = useState(0)\n  //const [typename, settypename] = useState(\"default\")\n  //const [cityname, setcityname] = useState(\"default\")\n  const { status, opened, messages } = Display()\n  //起始畫面\n  const startPage = (\n    <div>\n      <div className=\"background\">\n        <img src={background} alt=\"\" />\n      </div>\n      <button\n        onClick={async () => {\n          await //selectcityPage()\n            setpage(1)\n        }}>\n        Start Your Trip!</button>\n    </div>\n  )\n  //選擇程式的畫面\n  const selectcityPage = (\n    <>\n      <div>\n        <h1>WELCOME TO TAIWAN</h1>\n        <select onChange={async (e) => {\n          await setpage(2);\n          setcity(e.target.options[e.target.options.selectedIndex].value);\n          setmylat(lats[e.target.options.selectedIndex]);\n          setmylng(lngs[e.target.options.selectedIndex]);\n          setmyzoom(zooms[e.target.options.selectedIndex])\n        }}>\n          <option value=\"select\">select a city</option>\n          <option value=\"台北\">台北</option>\n          <option value=\"新北\">新北</option>\n          <option value=\"桃園\">桃園</option>\n          <option value=\"台中\">台中</option>\n          <option value=\"台南\">台南</option>\n          <option value=\"高雄\">高雄</option>\n        </select>\n        <button onClick={async () => { await setpage(0) }}>回到上一頁</button>\n      </div>\n      <div className=\"city\">\n        <div className=\"cityname\">\n          <h1>台北市</h1>\n          <img src={taipei} alt=\"\" />\n        </div>\n        <div className=\"cityname\">\n          <h1>台南市</h1>\n          <img src={tainan} alt=\"\" />\n        </div>\n        <div className=\"cityname\">\n          <h1>桃園市</h1>\n          <img src={taoyuan} alt=\"\" />\n        </div>\n      </div>\n      <div className=\"city\">\n        <div className=\"cityname\">\n          <h1>台中市</h1>\n          <img className=\"img\" src={taichung} alt=\"\" />\n        </div>\n        <div className=\"cityname\">\n          <h1>新北市</h1>\n          <img className=\"img\" src={new_taipei} alt=\"\" />\n        </div>\n        <div className=\"cityname\">\n          <h1>高雄市</h1>\n          <img className=\"img\" src={kaohsiung} alt=\"\" />\n        </div>\n      </div>\n    </>\n  )\n  //選擇種類的畫面\n  const selecttypePage = (\n    <>\n      <div>\n        <h1>{cityname}</h1>\n        <button onClick={async () => { await setpage(1) }}>回到上一頁</button>\n      </div>\n      <div>\n        <div className=\"tp\">\n          <div className=\"typename\">\n            <h1>食</h1>\n            <button type=\"button\" onClick={async () => { await setpage(3); settype(\"食\"); }}><img className=\"type\" src={food} alt=\"\" /></button>\n          </div>\n          <div className=\"typename\">\n            <h1>住</h1>\n            <button type=\"button\" onClick={async () => { await setpage(3); settype(\"住\"); }}><img className=\"type\" src={hotel} alt=\"\" /></button>\n          </div>\n        </div>\n        <div className=\"tp\">\n          <div className=\"typename\">\n            <h1>景點</h1>\n            <button type=\"button\" onClick={async () => { await setpage(3); settype(\"行\"); }}><img className=\"type\" src={tour} alt=\"\" /></button>\n          </div>\n          <div className=\"typename\">\n            <h1>籃球場</h1>\n            <button type=\"button\" onClick={async () => { await setpage(3); settype(\"球場\"); }}><img className=\"type\" src={basket} alt=\"\" /></button>\n          </div>\n        </div>\n\n      </div>\n    </>\n  )\n  //逛圖片的畫面\n  const filter = messages.filter(function (messages) { return messages.type === typename && messages.city === cityname })\n  const finalPage = (\n    <div>\n      <h1>{cityname}/{typename}</h1>\n      <button onClick={async () => { await setpage(2) }}>回到上一頁</button>\n      <p>推薦清單 : </p>\n      <div className=\"App-messages\">\n        {\n          filter.map(({ name, type, city, reference }, i) => (\n            <p className=\"App-message\" key={i}>\n              <Tag color=\"blue\">{name}</Tag> <Tag color=\"red\">{type}</Tag> <Tag color=\"red\">{city}</Tag> {reference}\n            </p>\n          ))\n        }\n      </div>\n      <div className = \"GoogleMap\">\n        <SimpleMap />\n      </div>\n      <button onClick={async () => await console.log(messages)}>fuck</button>\n    </div >\n  )\n  if (page === 0) {\n    return <div className=\"App\" >{startPage}</div>\n  }\n  else if (page === 1) {\n    return <div className=\"App\" >{selectcityPage}</div>\n  }\n  else if (page === 2) {\n    return <div className=\"App\" >{selecttypePage}</div>\n  }\n  else if (page === 3) {\n    return <div className=\"App\" >{finalPage}</div>\n  }\n}\n\nexport default App;\n","/home/sylin/Documents/1091ntueewebprog_group24/src/axios.js",[],"/home/sylin/Documents/1091ntueewebprog_group24/src/display.js",["36"],"import { useState } from 'react'\n// import { w3cwebsocket as W3CWebSocket } from 'websocket'\n\n// const client = new W3CWebSocket('ws://localhost:4000')\nconst client = new WebSocket('ws://localhost:4000')//WS server URL(client side)\n\nconst Display = () => {\n  const [messages, setMessages] = useState([])\n  const [status, setStatus] = useState({})\n  const [opened, setOpened] = useState(false)\n\n  client.onopen = () => {\n    setOpened(true)\n  }//跟WS server連接建立時觸發\n\n  client.onmessage = (message) => {\n    const { data } = message\n    //payload:承載量，在一堆資料中我們所關心的部份\n    const [task, payload] = JSON.parse(data)//將data字串解析成JSON\n\n    switch (task) {\n      case 'init': {\n        setMessages(() => payload)\n        break\n      }\n      default:\n        break\n    }\n  }\n\n  return {\n    status,\n    opened,\n    messages\n  }\n}\n\nexport default Display\n\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":19},{"ruleId":"41","severity":1,"message":"45","line":3,"column":21,"nodeType":"43","messageId":"44","endLine":3,"endColumn":35},{"ruleId":"41","severity":1,"message":"46","line":3,"column":37,"nodeType":"43","messageId":"44","endLine":3,"endColumn":51},{"ruleId":"41","severity":1,"message":"47","line":3,"column":53,"nodeType":"43","messageId":"44","endLine":3,"endColumn":65},{"ruleId":"41","severity":1,"message":"48","line":5,"column":10,"nodeType":"43","messageId":"44","endLine":5,"endColumn":16},{"ruleId":"41","severity":1,"message":"49","line":5,"column":18,"nodeType":"43","messageId":"44","endLine":5,"endColumn":23},{"ruleId":"41","severity":1,"message":"50","line":5,"column":25,"nodeType":"43","messageId":"44","endLine":5,"endColumn":32},{"ruleId":"41","severity":1,"message":"51","line":68,"column":11,"nodeType":"43","messageId":"44","endLine":68,"endColumn":17},{"ruleId":"41","severity":1,"message":"52","line":68,"column":19,"nodeType":"43","messageId":"44","endLine":68,"endColumn":25},{"ruleId":"41","severity":1,"message":"53","line":9,"column":18,"nodeType":"43","messageId":"44","endLine":9,"endColumn":27},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'startPage' is defined but never used.","Identifier","unusedVar","'selectcityPage' is defined but never used.","'selecttypePage' is defined but never used.","'choosingPage' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'message' is defined but never used.","'status' is assigned a value but never used.","'opened' is assigned a value but never used.","'setStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]